// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createAt  DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  username  String    @unique
  hash      String
  firstName String?
  lastName  String?
  picture   String?
  Post      Post[]
  Comment   Comment[]

  @@map("users")
}

model Type {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  name     String
  Post     Post[]

  @@map("types")
}

model Post {
  id       Int       @id @default(autoincrement())
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  title    String
  content  String
  userId   Int
  typeId   Int
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  type     Type      @relation(fields: [typeId], references: [id])
  Comment  Comment[]

  @@map("posts")
}

model Comment {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  content  String
  userId   Int
  postId   Int
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post     Post     @relation(fields: [postId], references: [id])

  @@map("comments")
}
